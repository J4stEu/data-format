{"version":3,"sources":["components/Option.js","data/Data.js","components/Windows.js","App.js","index.js"],"names":["Option","props","format","Formats","id","optionsComponents","map","yaml","require","xml","Windows","state","formats","fromFormat","toFormat","fromData","toData","getFormat","bind","getData","value","event","this","setState","target","options","selectedIndex","text","console","log","side","fromDataToJson","alert","ignoreDeclaration","compact","xml2json","e","e2","load","JSON","parse","stringify","js2xml","dump","className","placeholder","onChange","width","height","xmlns","fillRule","clipRule","d","onClick","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e233527.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Option(props) {\r\n    return (\r\n        <option>{props.format}</option>\r\n    )\r\n}\r\n\r\nexport default Option","const Formats = [\r\n    {\r\n        id: 0,\r\n        format: \"...\"\r\n    },\r\n    {\r\n        id: 1,\r\n        format: \"JSON\"\r\n    },\r\n    {\r\n        id: 2,\r\n        format: \"XML\"\r\n    },\r\n    {\r\n        id: 3,\r\n        format: \"YAML\"\r\n    }\r\n]\r\n\r\nexport default Formats","import React from 'react';\r\nimport Option from './Option';\r\nimport Formats from '../data/Data'\r\n\r\nconst optionsComponents = Formats.map(format => <Option key={format.id} format={format.format} />)\r\nlet yaml = require(\"js-yaml\");\r\nlet xml = require('xml-js');\r\n\r\nclass Windows extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            formats: Formats,\r\n            fromFormat: \"...\",\r\n            toFormat: \"...\",\r\n            fromData: \"\",\r\n            toData: \"\",\r\n        }\r\n        this.getFormat = this.getFormat.bind(this)\r\n        this.getData = this.getData.bind(this)\r\n        this.format = this.format.bind(this)\r\n    }\r\n\r\n    getFormat(value, event) {\r\n        if (value) {\r\n            this.setState(() => {\r\n                return {\r\n                    fromFormat: event.target.options[event.target.selectedIndex].text\r\n                }\r\n            })\r\n        } else {\r\n            this.setState(() => {\r\n                return {\r\n                    toFormat: event.target.options[event.target.selectedIndex].text\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    getData(value, event) {\r\n        if (value) {\r\n            this.setState(() => {\r\n                return {\r\n                    fromData: event.target.value\r\n                }\r\n            })\r\n            console.log(\"fromData:\" + event.target.value)\r\n        } else {\r\n            this.setState(() => {\r\n                return {\r\n                    toData: event.target.value\r\n                }\r\n            })\r\n            console.log(\"toData:\" + event.target.value)\r\n        }\r\n    }\r\n\r\n    format(side) {\r\n        let fromFormat = this.state.fromFormat;\r\n        let fromData = this.state.fromData;\r\n        let toFormat = this.state.toFormat;\r\n        let fromDataToJson;\r\n        let toData;\r\n        if (!side) {\r\n            //alert(side)\r\n            fromFormat = this.state.toFormat;\r\n            fromData = this.state.toData;\r\n            toFormat = this.state.fromFormat;\r\n        }\r\n        switch (fromFormat) {\r\n            case '...':\r\n                console.log('From format is not defined');\r\n                alert('From format is not defined');\r\n                return;\r\n            case 'JSON':\r\n                fromDataToJson = fromData;\r\n                break;\r\n            case 'XML':\r\n                let options = {ignoreDeclaration: false, compact: true};\r\n                try {\r\n                    fromDataToJson = xml.xml2json(fromData, options);\r\n                    console.log(fromDataToJson);\r\n                } catch (e) {\r\n                    //console.log(`<root>${fromData}</root>`);\r\n                    try {\r\n                        fromDataToJson = xml.xml2json(`<root>${fromData}</root>`, options);\r\n                    }\r\n                    catch (e2) {\r\n                        console.log(e);\r\n                        alert(e);\r\n\r\n                        console.log(e2);\r\n                        alert(e2);\r\n                    }\r\n                }\r\n                break;\r\n            case 'YAML':\r\n                try {\r\n                    fromDataToJson = yaml.load(fromData);\r\n                    //console.log(fromDataToJson);\r\n                } catch (e) {\r\n                    console.log(e);\r\n                    alert(e);\r\n                }\r\n                break;\r\n            default:\r\n                console.log('Something is wrong');\r\n                alert('Something is wrong...');\r\n        }\r\n\r\n        if (typeof fromDataToJson != 'object') {\r\n            try {\r\n                fromDataToJson = JSON.parse(fromDataToJson);\r\n                console.log(fromDataToJson);\r\n            } catch (e) {\r\n                console.log(e);\r\n                alert(e);\r\n                return;\r\n            }\r\n        }\r\n        \r\n        switch(toFormat) {\r\n            case '...':\r\n                console.log('To format is not defined');\r\n                alert('To format is not defined');\r\n                return;\r\n            case 'JSON':\r\n                try {\r\n                    toData = JSON.stringify(fromDataToJson);\r\n                    //console.log(toData);\r\n                } catch (e) {\r\n                    console.log(e);\r\n                    alert(e);\r\n                }\r\n                break;\r\n            case 'XML':\r\n                let options = {ignoreDeclaration: false, compact: true};\r\n                if (!(fromDataToJson['declaration'] || fromDataToJson['_declaration'])) {\r\n                    options['ignoreDeclaration'] = true;\r\n                }\r\n                try {\r\n                    toData = xml.js2xml(fromDataToJson, options);\r\n                } catch (e) {\r\n                    console.log(e);\r\n                    alert(e);\r\n                }\r\n                break;\r\n            case 'YAML':\r\n                try {\r\n                    toData = yaml.dump(fromDataToJson);\r\n                    //console.log(toData);\r\n                } catch (e) {\r\n                    console.log(e);\r\n                    alert(e);\r\n                }\r\n              break;\r\n            default:\r\n                console.log('Something is wrong');\r\n                alert('Something is wrong...');\r\n        }\r\n        this.setState(() => {\r\n            if (!side) {\r\n                return {\r\n                    fromData: toData\r\n                }\r\n            }\r\n            return {\r\n                toData: toData\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div className=\"windowsContainer\">\r\n            <div className=\"firstWindow\">\r\n                <textarea className=\"textData convFrom\" value={this.state.fromData} placeholder={this.state.fromFormat} onChange={event => this.getData(true, event)}></textarea>\r\n            </div>\r\n            <div className=\"controlPanel\">\r\n                <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" fillRule=\"evenodd\" clipRule=\"evenodd\"><path d=\"M2.117 12l7.527 6.235-.644.765-9-7.521 9-7.479.645.764-7.529 6.236h21.884v1h-21.883z\"/></svg>\r\n                <select className=\"convSelect convFromSelect\" onChange={event => this.getFormat(true, event)}>\r\n                    {optionsComponents}\r\n                </select>\r\n                <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" fillRule=\"evenodd\" clipRule=\"evenodd\"><path d=\"M21.883 12l-7.527 6.235.644.765 9-7.521-9-7.479-.645.764 7.529 6.236h-21.884v1h21.883z\"/></svg>\r\n                <select className=\"convSelect convToSelect\" onChange={event => this.getFormat(false, event)}>\r\n                    {optionsComponents}\r\n                </select> \r\n                <div className=\"convButtons\">\r\n                    <div className=\"convButton rightConvButton\" onClick={() => this.format(false)}>\r\n                        <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" fillRule=\"evenodd\" clipRule=\"evenodd\"><path d=\"M2.117 12l7.527 6.235-.644.765-9-7.521 9-7.479.645.764-7.529 6.236h21.884v1h-21.883z\"/></svg>\r\n                        Convert\r\n                    </div>\r\n                    <div className=\"convButton leftConvButton\" onClick={() => this.format(true)}>\r\n                        Convert\r\n                        <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" fillRule=\"evenodd\" clipRule=\"evenodd\"><path d=\"M21.883 12l-7.527 6.235.644.765 9-7.521-9-7.479-.645.764 7.529 6.236h-21.884v1h21.883z\"/></svg>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"secondWindow\">\r\n                <textarea className=\"textData convTo\" value={this.state.toData} placeholder={this.state.toFormat} onChange={event => this.getData(false, event)}></textarea>\r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Windows","import React from 'react';\nimport Windows from './components/Windows';\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {}\n  }\n  render() {\n    return (\n      <div id=\"MainSection\">\n        <Windows />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport './assets/css/normalize.css';\nimport './assets/css/style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}